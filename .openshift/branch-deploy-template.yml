apiVersion: v1
kind: Template
metadata:
  name: siibra-api-deploy-${FLAVOR}-template
  annotations:
    description: "Deploy siibra api"
    tags: "siibra-api"
objects:

# worker deployment config
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: siibra-api-deploy-${FLAVOR}-worker
    labels:
      app: siibra-api-deploy-${FLAVOR}
      app_role: worker
  spec:
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: siibra-api-deploy-worker
    template:
      metadata:
        labels:
          app: siibra-api-deploy-${FLAVOR}
          deploymentconfig: siibra-api-deploy-worker
          app_role: worker
      spec:
        containers:
        - env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: siibra-redis
          - name: SIIBRA_CACHEDIR
            value: ${SHARED_VOLUME_MOUNT}
          - name: SIIBRA_API_LOG_DIR
            value: ${LOG_VOLUME_MOUNT}

          image: ${SIIBRA_API_WORKER_IMAGE}
          imagePullPolicy: Always
          name: siibra-api-deploy-${FLAVOR}-worker
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: ${SHARED_VOLUME_MOUNT}
              name: volume-${SHARED_VOLUME_WORKER_VOLUME_NAME}
            - mountPath: ${LOG_VOLUME_MOUNT}
              name: volume-${LOG_VOLUME_WORKER_VOLUME_NAME}

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: volume-${SHARED_VOLUME_WORKER_VOLUME_NAME}
            persistentVolumeClaim:
              claimName: siibra-shared-storage
          - name: volume-${LOG_VOLUME_WORKER_VOLUME_NAME}
            persistentVolumeClaim:
              claimName: log-volume

# server deployment config
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: siibra-api-deploy-${FLAVOR}-server
    labels:
      app: siibra-api-deploy-${FLAVOR}
      app_role: server
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: siibra-api-deploy-server
    template:
      metadata:
        labels:
          app: siibra-api-deploy-${FLAVOR}
          deploymentconfig: siibra-api-deploy-server
          app_role: server
      spec:
        containers:
        - env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: siibra-redis
          - name: SIIBRA_CACHEDIR
            value: ${SHARED_VOLUME_MOUNT}
          - name: SIIBRA_API_LOG_DIR
            value: ${LOG_VOLUME_MOUNT}

          image: ${SIIBRA_API_SERVER_IMAGE}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 6
          name: siibra-api-deploy-${FLAVOR}-server
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

          volumeMounts:
            - mountPath: ${SHARED_VOLUME_MOUNT}
              name: volume-${SHARED_VOLUME_SERVER_VOLUME_NAME}
            - mountPath: ${LOG_VOLUME_MOUNT}
              name: volume-${LOG_VOLUME_SERVER_VOLUME_NAME}

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: volume-${SHARED_VOLUME_SERVER_VOLUME_NAME}
            persistentVolumeClaim:
              claimName: siibra-shared-storage
          - name: volume-${LOG_VOLUME_SERVER_VOLUME_NAME}
            persistentVolumeClaim:
              claimName: log-volume

# route-pod
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: siibra-api-deploy-${FLAVOR}
    name: siibra-api-deploy-${FLAVOR}-service
  spec:
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: siibra-api-deploy-${FLAVOR}
      app_role: server
    type: ClusterIP

# route
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: siibra-api-deploy-${FLAVOR}
    name: siibra-api-deploy-${FLAVOR}-route
  spec:
    host: ${SIIBRA_API_ROUTE}
    port:
      targetPort: 5000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: siibra-api-deploy-${FLAVOR}-service
      weight: 100
    wildcardPolicy: None

parameters:
- name: FLAVOR
  description: Flavor of siibra-api (e.g. stable, rc, latest, etc)
  required: true
- name: SIIBRA_API_ROUTE
  description: Toolbox Route, without scheme (i.e. no https?://). should be [a-z0-9][a-z0-9-][a-z0-9].apps(-dev)?.hbp.eu
  required: true
- name: SIIBRA_API_WORKER_IMAGE
  description: Docker image for the worker
  required: true
- name: SIIBRA_API_SERVER_IMAGE
  description: Docker image for the server
  required: true


# - name: CELERY_CONFIG_SERVER_VOLUME_NAME
#   description: Randomly generated volume name. Do not overwrite
#   from: '[a-z0-9]{8}'
#   generate: expression
# - name: CELERY_CONFIG_WORKER_VOLUME_NAME
#   description: Randomly generated volume name. Do not overwrite
#   from: '[a-z0-9]{8}'
#   generate: expression

  # RESULT VOLUME
- name: SHARED_VOLUME_SERVER_VOLUME_NAME
  description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
- name: SHARED_VOLUME_WORKER_VOLUME_NAME
  description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
- name: LOG_VOLUME_SERVER_VOLUME_NAME
  description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
- name: SHARED_VOLUME_MOUNT
  description: Path where shared volume will be mounted. Applies to both server and worker pods.
  value: /siibra-api-volume

  # LOG VOLUME
- name: LOG_VOLUME_WORKER_VOLUME_NAME
  description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
- name: LOG_VOLUME_SERVER_VOLUME_NAME
  description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
- name: LOG_VOLUME_MOUNT
  description: Path where shared volume will be mounted. Applies to both server and worker pods.
  value: /siibra_api_logs

labels:
  template: siibra-api-deploy-template

# prerequisite:
# - named persistent volume named `siibra-shared-storage`
# - named persistent volume named `log-volume`
# - redis secret at secretKeyRef.redis.database-password
# - configMap.celery-config -> volume mounted to /siibra_toolbox/http_wrapper/conf (celery config)
# - redis instance, reachable via config in configMap.celery-config.celeryconfig