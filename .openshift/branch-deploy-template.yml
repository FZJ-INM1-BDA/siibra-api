apiVersion: v1
kind: Template
metadata:
  name: siibra-api-branch-deploy
  annotations:
    description: "Deploy branch of siibra-api"
    tags: "python,fastapi,siibra-api"
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
    labels:
      app: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
    template:
      metadata:
        labels:
          app: siibra-api-branch-deploy
          deploymentconfig: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
      spec:
        containers:
        - env:
          - name: SESSION_SECRET
            value: ${SESSION_SECRET}

          - name: EBRAINS_IAM_CLIENT_ID
            valueFrom: 
              configMapKeyRef:
                name: hbp-oauth-config-map
                key: HBP_CLIENTID
          - name: EBRAINS_IAM_CLIENT_SECRET
            valueFrom: 
              configMapKeyRef:
                name: hbp-oauth-config-map
                key: HBP_CLIENTSECRET
          - name: EBRAINS_IAM_REFRESH_TOKEN
            valueFrom: 
              configMapKeyRef:
                name: hbp-oauth-config-map
                key: REFRESH_TOKEN
                
          envFrom:
          - configMapRef:
              name: siibra-config-overwrite
            prefix: SIIBRA_CONFIG_

          # this is sucky
          # in future, either change siibra-python to use diskcache/rediscache
          # or use startupProbe (openshift 4.4+) to allow >600 sec container startup time
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 580
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10

          image: "docker-registry.ebrains.eu/siibra/siibra-api:${BRANCH_NAME}"
          imagePullPolicy: Always
          name: siibra-api-${SANITIZED_BRANCH_NAME}
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
    name: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
  spec:
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      deploymentconfig: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
    name: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
  spec:
    host: siibra-api-${SANITIZED_BRANCH_NAME}.apps-dev.hbp.eu
    port:
      targetPort: 5000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: siibra-api-branch-deploy-${SANITIZED_BRANCH_NAME}
      weight: 100
    wildcardPolicy: None

parameters:
- name: BRANCH_NAME
  required: true
- name: SANITIZED_BRANCH_NAME
  required: true
  description: |
    A lot of routing/naming follow special rules:
    - does not allow special characters, except for - or . .
    - only allows lower case.
    Strip all special characters from BRANCH_NAME, change to all lower case and pass it as SANITIZED_BRANCH_NAME

labels:
  template: siibra-api-branch-deploy-template
