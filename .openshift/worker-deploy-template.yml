apiVersion: v1
kind: Template
metadata:
  name: siibra-api-v5-worker-template
  annotations:
    description: "Deploy siibra api worker"
    tags: "siibra-api"
objects:

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: worker-q-${SIIBRA_API_QUEUE}
    labels:
      flavor: ${FLAVOR}
      app: siibra-api
      queue: ${SIIBRA_API_QUEUE}
      template_version: v5
      app_role: worker
  spec:
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: worker-q-${SIIBRA_API_QUEUE}
    template:
      metadata:
        labels:
          flavor: ${FLAVOR}
          app: siibra-api-worker
          deploymentconfig: worker-q-${SIIBRA_API_QUEUE}
          queue: ${SIIBRA_API_QUEUE}
          template_version: v5
          app_role: worker
      spec:
        containers:
        - env:
          - name: SIIBRA_CACHEDIR
            value: ${SHARED_VOLUME_MOUNT}
          - name: SIIBRA_API_LOG_DIR
            value: ${LOG_VOLUME_MOUNT}
          - name: SIIBRA_API_NAMESPACE
            value: ${SIIBRA_API_NAMESPACE}
          - name: SIIBRA_API_QUEUE
            value: ${SIIBRA_API_QUEUE}
          envFrom:
          - configMapRef:
              name: siibra-api-config
            prefix: SIIBRA_API_

          image: ${SIIBRA_API_WORKER_IMAGE}
          command: ["celery"]
          args: ["-A", "api.worker.app", "worker", "-Q", "${SIIBRA_API_QUEUE}", "-O", "fair"]

          imagePullPolicy: Always
          name: worker-${CONTAINER_NAME}
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: ${SHARED_VOLUME_MOUNT}
              name: volume-${SHARED_VOLUME_WORKER_VOLUME_NAME}
            - mountPath: ${LOG_VOLUME_MOUNT}
              name: volume-${LOG_VOLUME_WORKER_VOLUME_NAME}

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: volume-${SHARED_VOLUME_WORKER_VOLUME_NAME}
            persistentVolumeClaim:
              claimName: siibra-shared-storage-2
          - name: volume-${LOG_VOLUME_WORKER_VOLUME_NAME}
            persistentVolumeClaim:
              claimName: log-volume

parameters:
- name: SIIBRA_API_WORKER_IMAGE
  description: Docker image for the worker
  required: true
- name: SIIBRA_API_QUEUE
  description: |
    Queue for the worker to join.
    Must be of the pattern [a-zA-Z0-9-.]+.
    Typically {VERSION}.{NAMESPACE}.{CHANNEL}
    e.g. 0.3.1.siibrapi.core
  required: true
- name: SIIBRA_API_NAMESPACE
  description: |
    Namespace.
    For k8s and metrics related reasons, must be of the pattern [a-zA-Z0-9-]+
    For metrics related reason, must be of patter [a-zA-Z0-9_]+
    So... use [a-zA-Z0-9]+ only!
    Try to stick to siibraapi{FLAVOR}, e.g. siibraapilatest

- name: LOG_VOLUME_WORKER_VOLUME_NAME
  description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
- name: SHARED_VOLUME_WORKER_VOLUME_NAME
  description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
- name: SHARED_VOLUME_MOUNT
  description: Path where shared volume will be mounted. Applies to both server and worker pods.
  value: /siibra-api-volume
- name: LOG_VOLUME_MOUNT
  description: Path where log volume will be mounted. Applies to both server and worker pods.
  value: /siibra_api_logs
- name: CONTAINER_NAME
  description: Name of container. If not supplied, will be autogenerated.
  from: '[a-z0-9]{8}'
  generate: expression

- name: FLAVOR
  description: Flavor of deployments. (e.g. latest,rc,stable)
  value: latest
  required: true
