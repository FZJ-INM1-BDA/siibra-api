# Default values for siibra-api-v4-worker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

sapi:
  flavor: "prod" # could be prod, rc
  version: ""
  
  worker: "api.worker.app" # passed to celery -A $worker
  queue: "0.3.21.prod.core" # passed to celery -Q $queue
  
  resources:
    flavor: "low"
    # low: 100m/500m, 1Gi/2.5Gi, scaling on
    # high: 300m/1500m, 2Gi/5Gi, scaling off

image:
  repository: docker-registry.ebrains.eu/siibra/siibra-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.3-worker
  spec: 0.3-worker # can be 1/ tag 2/ sha256:<sha-hash>

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels:
  role: worker

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  initialDelaySeconds: 2
  periodSeconds: 10
  timeoutSeconds: 4
  failureThreshold: 12
  exec:
    command: ["/bin/bash", "-c", "cd /worker && python worker_health.py"]

readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  # this chart does not use this flag to control whether HPA is enabled
  # see _helper.tpl for more
  # this chart **does** use the other values
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  
# Additional volumes on the output Deployment definition.
volumes:
  - name: log-volume
    persistentVolumeClaim:
      claimName: log-volume-claim
  - name: data-volume
    persistentVolumeClaim:
      claimName: data-volume-claim


# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - mountPath: /siibra-api-volume
    name: data-volume
  - mountPath: /siibra_api_logs
    name: log-volume

nodeSelector: {}

tolerations: []

affinity: {}
