apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-pod-usage
spec:
  # run everyminute
  schedule: "* * * * *"
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cronjob-pod-usage
            image: docker-registry.ebrains.eu/monitoring/kubectl:v1.29.2
            imagePullPolicy: Always
            command:
            - /bin/ash
            - -c
            - "kubectl top pod > /siibra-api-volume/metrics.txt"
            volumeMounts:
              - mountPath: /siibra-api-volume
                name: data-volume
              - mountPath: /var/tmp/kube/
                name: kubectl-config
                readOnly: true
            env:
            - name: KUBECONFIG
              value: /var/tmp/kube/config

          restartPolicy: OnFailure
          volumes:
          - name: data-volume
            persistentVolumeClaim:
              claimName: data-volume-claim
          - name: kubectl-config
            secret:
              secretName: kubectl-config

# to enable/disable
# kubectl patch cronjobs cronjob-pod-usage -p '{"spec" : {"suspend" : true }}'

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-trim-old-log-usage
spec:
  # run two month
  schedule: "41 1 */5 */2 *"
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cronjob-trim-old-log-usage
            image: docker-registry.ebrains.eu/monitoring/kubectl:v1.29.2
            imagePullPolicy: Always
            command:
            - /bin/ash
            - -c
            # delete all files over 30 days of modification date
            - "find /siibra_api_logs -mindepth 1 -maxdepth 1 -mtime +30 -delete"
            volumeMounts:
              - mountPath: /siibra_api_logs
                name: log-volume

          restartPolicy: OnFailure
          volumes:
          - name: log-volume
            persistentVolumeClaim:
              claimName: log-volume-claim
