name: Trigger deploy on OKD
on:
  workflow_call:

    inputs:
      okd_endpoint:
        required: true
        type: string
      flavor:
        required: true
        type: string
      queues:
        required: true
        type: string
      version:
        required: true
        type: string
      workerimage:
        required: true
        type: string

    secrets:
      okd_token:
        required: true
jobs:
  trigger-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Login and import image'
      run: |
        oc login ${{ inputs.okd_endpoint }} --token=${{ secrets.okd_token }}
        oc project siibra-api

        echo "Restarting all servers"
        for dc in $(oc get dc -l app=siibra-api,app_role=server,flavor=${{ inputs.flavor }},template_version=v5 | awk '{print $1}' | tail -n +2)
        do 
          oc rollout latest dc/$dc
        done

        for queue in ${{ inputs.queues }}
        do
          echo Processing worker with queue name: $queue siibraapi version ${{ inputs.version }}

          existing_count=$(oc get dc -o=json -l flavor=${{ inputs.flavor }},siibraapi_version=${{ inputs.version }},app=siibra-api,app_role=worker,queue=${{ inputs.version }}.siibraapi${{ inputs.flavor }}.${queue} | jq '.items | length')
          
          echo Existing dc count: $existing_count

          if [[ "$existing_count" = "1" ]]
          then
            dc=$(oc get dc -o=json -l flavor=${{ inputs.flavor }},siibraapi_version=${{ inputs.version }},app=siibra-api,app_role=worker,queue=${{ inputs.version }}.siibraapi${{ inputs.flavor }}.${queue} | jq -r '.items[0].metadata.name')
            oc rollout latest dc/$dc
          else
            oc delete all -l flavor=latest,app=siibra-api,app_role=worker,queue=${{ inputs.version }}.siibraapi${{ inputs.flavor }}.${queue}
            oc new-app --template=siibra-api-v5-worker-template \
              --param SIIBRA_API_VERSION=${{ inputs.version }} \
              --param FLAVOR=${{ inputs.flavor }} \
              --param QUEUE_NAME=$queue \
              --param SIIBRA_API_WORKER_IMAGE=${{ inputs.workerimage }}
          fi
        done